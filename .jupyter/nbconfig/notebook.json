{
  "Cell": {
    "cm_config": {
      "lineNumbers": true
    }
  },
  "load_extensions": {
    "nbextensions_configurator/config_menu/main": true,
    "contrib_nbextensions_help_item/main": true,
    "code_prettify/isort": true,
    "code_prettify/code_prettify": false,
    "jupyter-black-master/jupyter-black": true,
    "collapsible_headings/main": true,
    "codefolding/main": true,
    "execute_time/ExecuteTime": true,
    "autosavetime/main": false,
    "help_panel/help_panel": true,
    "highlighter/highlighter": true,
    "notify/notify": true,
    "ruler/main": true,
    "snippets/main": true,
    "toc2/main": true,
    "printview/main": true,
    "snippets_menu/main": true,
    "runtools/main": true,
    "spellchecker/main": true,
    "jupyter-js-widgets/extension": false,
    "pydeck/extension": false,
    "hinterland/hinterland": true
  },
  "autosavetime_starting_interval": "1",
  "notify": {
    "play_sound": true
  },
  "ruler_color": [
    "#ff9500"
  ],
  "jupyter-black": {
    "hotkeys": {
      "process_all": "ctrl-shift-i",
      "process_selected": "ctrl-i"
    },
    "kernel_config_map_json": "{\n  \"python\": {\n    \"library\": \"import json\\ndef black_reformat(cell_text):\\n    import black\\n    import re\\n    cell_text = re.sub('^%', '#%#', cell_text, flags=re.M)\\n    reformated_text = black.format_str(cell_text, mode=black.FileMode())\\n    return re.sub('^#%#', '%', reformated_text, flags=re.M)\",\n    \"prefix\": \"print(json.dumps(black_reformat(u\",\n    \"postfix\": \")))\"\n  },\n  \"javascript\": {\n    \"library\": \"jsbeautify = require('js-beautify')\",\n    \"prefix\": \"console.log(JSON.stringify(jsbeautify.js_beautify(\",\n    \"postfix\": \")));\"\n  }\n}",
    "register_hotkey": true
  },
  "isort": {
    "kernel_config_map_json": "{\n  \"python\": {\n    \"library\": \"import json, isort\\ndef _isort_refactor_cell(src):\\n    try:\\n        tree = isort.SortImports(file_contents=src).output\\n    except Exception:\\n        return src \\n    else:\\n        return str(tree)[:-1]\",\n    \"prefix\": \"print(json.dumps(_isort_refactor_cell(u\",\n    \"postfix\": \")))\"\n  }\n}\n"
  }
}